{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class CategoryFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.category = {\n      id: 0,\n      name: '',\n      description: ''\n    };\n    this.formSubmit = new EventEmitter();\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['']\n    });\n  }\n  onSubmit() {\n    const category = this.categoryForm.value;\n    this.formSubmit.emit(category);\n    this.categoryForm.reset();\n  }\n}\nCategoryFormComponent.ɵfac = function CategoryFormComponent_Factory(t) {\n  return new (t || CategoryFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCategoryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoryFormComponent,\n  selectors: [[\"app-category-form\"]],\n  inputs: {\n    formTitle: \"formTitle\",\n    submitButtonText: \"submitButtonText\",\n    category: \"category\",\n    categoryForm: \"categoryForm\"\n  },\n  outputs: {\n    formSubmit: \"formSubmit\"\n  },\n  decls: 11,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"value\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function CategoryFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"textarea\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.category.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.category.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.categoryForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.submitButtonText);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAsB,eAAe;AACrE,SAAoBC,UAAU,QAAqB,gBAAgB;;;AAQnE,OAAM,MAAOC,qBAAqB;EAOhCC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAJb,aAAQ,GAAY;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;IACvD,eAAU,GAAG,IAAIP,YAAY,EAAY;IAIjD,IAAI,CAACQ,YAAY,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAChCH,IAAI,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACS,QAAQ,CAAC;MAC/BH,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;EACJ;EAEAI,QAAQ;IACN,MAAMC,QAAQ,GAAa,IAAI,CAACJ,YAAY,CAACK,KAAK;IAClD,IAAI,CAACC,UAAU,CAACC,IAAI,CAACH,QAAQ,CAAC;IAC9B,IAAI,CAACJ,YAAY,CAACQ,KAAK,EAAE;EAC3B;;AAlBWd,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAe;EAAAC;IAAAC;IAAAC;IAAAR;IAAAJ;EAAA;EAAAa;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;IAAA;MCThCC,+BAAyD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACtDD,8BAAwB;MACJA,oBAAI;MAAAA,iBAAQ;MAC9BA,2BAAoG;MACtGA,iBAAM;MACNA,8BAAwB;MACGA,2BAAW;MAAAA,iBAAQ;MAC5CA,8BAAyH;MAC3HA,iBAAM;MACNA,iCAA+E;MAAAA,aAAsB;MAAAA,iBAAS;;;MAT1GA,4CAA0B;MAGwBA,eAAuB;MAAvBA,yCAAuB;MAIlBA,eAA8B;MAA9BA,gDAA8B;MAEnEA,eAAgC;MAAhCA,kDAAgC;MAAyBA,eAAsB;MAAtBA,0CAAsB","names":["EventEmitter","Validators","CategoryFormComponent","constructor","fb","id","name","description","categoryForm","group","required","onSubmit","category","value","formSubmit","emit","reset","selectors","inputs","formTitle","submitButtonText","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\source\\repos\\Angular_Apps\\FrontEnd\\src\\app\\categories\\category-form\\category-form\\category-form.component.ts","C:\\Users\\HP\\source\\repos\\Angular_Apps\\FrontEnd\\src\\app\\categories\\category-form\\category-form\\category-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Input,Output } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Category } from '../../category/category.model';\n\n@Component({\n  selector: 'app-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css']\n})\nexport class CategoryFormComponent {\n  @Input() formTitle!: string;\n  @Input() submitButtonText!: string;\n  @Input() category:Category = { id: 0, name: '', description: '' };\n  @Output() formSubmit = new EventEmitter<Category>();\n  @Input() categoryForm!: FormGroup;  \n\n  constructor(private fb: FormBuilder) {\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['']\n    });\n  }\n\n  onSubmit() {\n    const category: Category = this.categoryForm.value;\n    this.formSubmit.emit(category);\n    this.categoryForm.reset();\n  }\n}","  <form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\" [value]=\"category.name\" class=\"form-control\"  />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea id=\"description\" formControlName=\"description\" [value]=\"category.description\" class=\"form-control\" ></textarea>\n    </div>\n    <button type=\"submit\" [disabled]=\"!categoryForm.valid\" class=\"btn btn-primary\">{{ submitButtonText }}</button>\n  </form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}